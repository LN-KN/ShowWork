@page "/fetchdata"
@inject HttpClient Http
@inject NavigationManager NavigationManager

<head>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap-4-grid@3.4.0/Gruntfile.min.js"></script>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-4-grid@3.4.0/css/grid.min.css" rel="stylesheet">
    <link rel="stylesheet" href="/css/uistyles.css">
</head>

<PageTitle>Мои работы</PageTitle>

@if (works == null)
{
    <p><em>Загрузка работ...</em></p>
}
else
{
    <div class="rait-works">
        <div class="work-block">
        <div class="top-portfolio">
            @for (var i = 0; i < works.Count - ADD_MORE_COUNT; i++)
        {
            if (works[i].TypeOfWork >= 0 && works[i].TypeOfWork < categoryNames.Length)
            {
                <div class="work">
                    <div class="portfolio-info">
                        <div class="author">
                              @if (!String.IsNullOrEmpty(@works[i].UserImagePath))
                              {
                                 <a href="/resume/@works[i].UserId"><img src="@works[i].UserImagePath" height="32.54" width="36.5" /></a>
                              }
                              else
                              {
                                 <a href="/resume/@works[i].UserId"><img src="images/inputImage.svg" height="32.54" width="36.5" /></a>
                              }
                              <p>@works[i].UserName @works[i].UserSurname</p>
                        </div>
                        <div>
                            <p class="work-name">@works[i].Title</p>
                            <p class="rating">@works[i].MiddleGrade</p>
                        </div>
                    </div>
                     <a href="/work/@works[i].WorkId">
                         @if (works[i].ImagePath != null)
                         {
                             <img class="work-image" src="@works[i].ImagePath" />
                         }
                         else
                         {
                             <img src="/images/image 7.png" />
                         }
                     </a>
                </div>
            }
        }
        @for (var i = works.Count - ADD_MORE_COUNT; i < works.Count; i++)
        {
            if (works[i].TypeOfWork >= 0 && works[i].TypeOfWork < categoryNames.Length)
            {
                <div class="workmore">
                    <div class="portfolio-info">
                        <div class="author">
                            @if (!String.IsNullOrEmpty(@works[i].UserImagePath))
                            {
                                <a href="/resume/@works[i].UserId"><img src="@works[i].UserImagePath" height="32.54" width="36.5" /></a>
                            }
                            else
                            {
                                <a href="/resume/@works[i].UserId"><img src="images/inputImage.svg" height="32.54" width="36.5" /></a>
                            }
                            <p>@works[i].UserName @works[i].UserSurname</p>
                        </div>
                        <div>
                            <p class="work-name">@works[i].Title</p>
                            <p class="rating">@works[i].MiddleGrade</p>
                        </div>
                    </div>
                    <a href="/work/@works[i].WorkId">
                        @if (works[i].ImagePath != null)
                        {
                             <img class="work-image" src="@works[i].ImagePath" />
                        }
                        else
                        {
                            <img src="/images/image 7.png" />
                        }
                    </a>
                </div>
            }
        }
        </div>
            </div>
        </div>
    <button id="moreButton" class="more-work_button-home" onclick="OnAddMore()">
        ЕЩЁ
    </button>
    <script type="text/javascript">
        function OnAddMore() {
            let button = document.getElementById("moreButton");
            let works = document.querySelectorAll(".workmore");
            button.style.display = 'none';
            for (var i = 0; i < works.length; ++i) {
                works[i].classList.remove('workmore');
                works[i].classList.add('work');
            }
            works.style.display = 'grid';
        }
    </script>
}

@code {
    int ADD_MORE_COUNT = 0;
    internal static List<Work>? works = null;
    private string[] categoryNames = new string[]
    {
        "Аналитика",
        "Разработка",
        "Фотография",
        "UI/UX дизайн",
        "Графический дизайн",
        "Другое"
    };
    private Work editItem = new Work();

    protected override async Task OnInitializedAsync()
    {
        var result = await Http.GetFromJsonAsync<List<Work>>("works/all");
        if (result != null)
            works = result.ToList();
        ADD_MORE_COUNT = works.Count() - 6;
        if(ADD_MORE_COUNT < 0)
            ADD_MORE_COUNT = works.Count() - 4;
        if (ADD_MORE_COUNT < 0)
            ADD_MORE_COUNT = works.Count() - 2;
        if (ADD_MORE_COUNT < 0)
            ADD_MORE_COUNT = 0;
    }

    public class Work
    {
        public int WorkId { get; set; }
        public int UserId { get; set; }

        public string UserName { get; set; }
        public string UserSurname { get; set; }
        public string UserImagePath { get; set; }
        public double MiddleGrade { get; set; }

        public int? TypeOfWork { get; set; } = 0;
        public string Title { get; set; } = null!;
        public string Description { get; set; } = null!;
        public string TextBlockOne { get; set; } = null!;
        public string TextBlockTwo { get; set; } = null!;
        public string TextBlockThree { get; set; } = null!;
        public string? ImagePath { get; set; }
        public int Status { get; set; } = 0;
        public int LikesCount { get; set; } = 0;
        public int CommentsCount { get; set; } = 0;
    }
    private void RedirectToEdit()
    {
        NavigationManager.NavigateTo("/edit", true);
    }
}
