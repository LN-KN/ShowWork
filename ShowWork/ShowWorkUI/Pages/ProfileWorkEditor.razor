@page "/fetchdata"
@inject HttpClient Http
@inject NavigationManager NavigationManager

<head>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap-4-grid@3.4.0/Gruntfile.min.js"></script>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-4-grid@3.4.0/css/grid.min.css" rel="stylesheet">
    <link rel="stylesheet" href="/css/uistyles.css">
</head>

<PageTitle>Мои работы</PageTitle>

@if (works == null)
{
    <p><em>Загрузка работ...</em></p>
}
else
{
    <div class="rait-works">
        <div class="work-block">
        <div class="top-portfolio">
        <label for="button" style="display: inline-block;">
            <img class="work" src="/images/создать работу.png" />
        </label>
        <button id="button" class="button" @onclick="RedirectToEdit" style="display:none;">Добавить</button>
        @foreach (var work in works)
        {
            if (work.TypeOfWork >= 0 && work.TypeOfWork < tagNames.Length)
            {
                <div class="work">
                    <div class="portfolio-info">
                        <div class="author">
                            <img src="@work.UserImagePath"
                                 height="32.54"
                                 width="36.5">
                            <p>@work.UserName @work.UserSurname</p>
                        </div>
                        <div>
                            <p class="work-name">@work.Title</p>
                            <p class="rating">@Math.Round(work.MiddleGrade,2)</p>
                        </div>
                    </div>
                    <a href="/work/@work.WorkId"> <img src="/images/image 7.png" /></a>
                </div>
               @*  <div>
                    <label>@tagNames[(int)work.TypeOfWork!]</label>
                    <label>@work.Title</label>
                    <label>@work.Description</label>
                    <label>@work.LikesCount</label>
                    <label>@work.CommentsCount</label>
                    <a href="/work/@work.WorkId"> <img class="work" src="/images/image 7.png" /></a>
                </div> *@
                
                 
            }
        }
            </div>
        </div>
    </div>
}

@code {
    internal static List<Work>? works = null;
    private string[] tagNames = new string[] 
    { 
        "Аналитика", 
        "Фотография", 
        "Графический дизайн", 
        "Разработка", 
        "UI/UX дизайн", 
        "Другое" 
    };
    private Work editItem = new Work();

    protected override async Task OnInitializedAsync()
    {
        var result = await Http.GetFromJsonAsync<List<Work>>("works/my");
        if(result != null)
            works = result.ToList();
    }

    public class Work
    {
        public int WorkId { get; set; }
        public int UserId { get; set; }

        public string UserName { get; set; }
        public string UserSurname { get; set; }
        public string UserImagePath { get; set; }
        public double MiddleGrade { get; set; }

        public int? TypeOfWork { get; set; } = 0;
        public string Title { get; set; } = null!;
        public string Description { get; set; } = null!;
        public string TextBlockOne { get; set; } = null!;
        public string TextBlockTwo { get; set; } = null!;
        public string TextBlockThree { get; set; } = null!;
        public string ImagePath { get; set; }
        public int Status { get; set; } = 0;
        public int LikesCount { get; set; } = 0;
        public int CommentsCount { get; set; } = 0;
        public DateTime? Published { get; set; }
    }
    private void RedirectToEdit()
    {
        NavigationManager.NavigateTo("/edit", true);
    }
}
